xmemo190831 コラージュ支援アプリ開発計画
仕様
画像二つ
１　元画像　高画質
２　コラ画像　元画像より画質低い

二つの画像はコラした部分以外は同一であることが保証されている。（外周部はトリミングの都合で違ったりする）






1 OpenCV？にてキーポイント検出し、回転させて方向と位置を合わせる。画像の縦横比も合わせる。トリミングはせず、はみ出た部分を透明で埋める方式で。
２　拡大倍率を求め、Waifuをはじめとする拡大ソフトによる処理を支援する。Waifuの場合はそのままパイプで渡してしまうか？
３　各ドットの色を様々な表色系で比較して、画像の色味の差を無くす。そもそもなければそれでよし。

上の処理を行う際、コラによる違いが悪さをしないようにフィルタをかけるべきか？

コラしている部分を検知してレイヤーとして分離するプログラムもあると便利か。









http://labs.eecs.tottori-u.ac.jp/sd/Member/oyamada/OpenCV/html/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.html
https://www.google.com/search?q=SIFT+%E7%94%BB%E5%83%8F%E8%AA%8D%E8%AD%98&oq=SIFT%E3%80%80%E7%94%BB%E5%83%8F%E8%AA%8D%E8%AD%98&aqs=chrome..69i57.4553j0j4&sourceid=chrome&ie=UTF-8
https://qiita.com/icoxfog417/items/adbbf445d357c924b8fc
https://www.slideshare.net/hironobufujiyoshi/miru2013sift?next_slideshow=1
https://www.google.com/search?q=surf+opencv&oq=surf+opencv&aqs=chrome..69i57.7816j0j4&sourceid=chrome&ie=UTF-8
https://www.tech-tech.xyz/sift-surf-akaze.html
https://www.google.com/search?q=A-KAZE&oq=A-KAZE&aqs=chrome..69i57j69i61l2&sourceid=chrome&ie=UTF-8
